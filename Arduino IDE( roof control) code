#include <ESP8266WebServer.h> 
#include <ESP8266WiFi.h> 
#include <WiFiClient.h> 
ESP8266WebServer server(80); 
const char *ssid = "ROOF_CONTROL";
const char *password = "12345678";
#define LED D4
/*#define D1 D5
#define D2 D6
#define D3 D7*/
int statusLED = HIGH; // variable for LED status
 String y;
int sensorValue = 0;
boolean openflag =  0;
boolean closeflag = 0;
// Declare constants to make the page to be visited.
const String HtmlHtml = "<html><head>"
"<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" /></head>";
//const String HtmlTitle = "<h6 align = center>WELCOME TO SBIT </br> IOT BASED HOME AUTOMATION </br> PROJECT MEMBERS</br> S.MADHURI (17M61A0436)</br>M.SAI(17M61A0436)</br>N.SATISHBABY(17M61A0439)</br>M.NAGAPRAVEEN(17M65A0405)</br>GUIDED BY</br> M.V.S.R.KISHORE</h6><br/>\n";
const String HtmlTitle = "<meta http-equiv=\"refresh\" content = \"3\" ><h1 align = center>ROOF CONTROL SYS</h1> </br>\n";
const String HtmlLedStateLow = "<big>DEVICE1  <b>OFF</b></big><br/><br/>\n";
const String HtmlLedStateHigh = "<big>DEVICE1 <b>ON</b></big><br/><br/>\n";

const String HtmlFanStateLow = "<big>DEVICE2  <b>ON</b></big><br/><br/>\n";
const String HtmlFanStateHigh = "<big>DEVICE2  <b>OFF</b></big><br/><br/>\n";

const String HtmlMotStateLow = "<big>DEVICE3  <b>ON</b></big><br/><br/>\n";
const String HtmlMotStateHigh = "<big>DEVICE3  <b>OFF</b></big><br/><br/>\n";

/*const String HtmlButtons =                                                               //names of buttons
"<a href=\"D1ON\"><button style=\"background-color:red;color:white;width:21%;height:5%;\">D1.ON </button></a>\n"
"<a href=\"D1OFF\"><button style=\"background-color:orange;color:white;width:21%;height:5%;\">D1.OFF</button></a><br/><br/>"
"<a href=\"D2ON\"><button style=\"background-color:green;color:white;width:21%;height:5%;\">D2.ON </button></a>\n"
"<a href=\"D2OFF\"><button style=\"background-color:blue;color:white;width:21%;height:5%;\">D2.OFF </button></a><br/><br/>";
/*"<a href=\"D3ON\"><button style=\"background-color:orange;color:white;width:21%;height:5%;\">M.ON </button></a>\n"
"<a href=\"D3OFF\"><button style=\"background-color:orange;color:white;width:21%;height:5%;\">M.OFF </button></a><br/><br/>"
"<a href=\"D4OFF\"><button style=\"background-color:orange;color:white;width:21%;height:5%;\">STOP </button></a><br/><br/>";*/

const String HtmlHtmlClose = "</html>";
// -----------------------------------------------------------------------------------------------------------------


// Function / procedure to handle each client making a request
void response()
{
 String htmlRes = HtmlHtml + HtmlTitle;
 //htmlRes += "<h2 align = center>ADC : " ;
 //htmlRes += String(analogRead(A0));
 //htmlRes += "</h2>";

 //if(analogRead(A0)<200)
 if(digitalRead(D3)==LOW)
 {
 htmlRes += "<h2 align = center>RainStarted</h2> " ;
 htmlRes += "<h2 align = center>Roof Closed</h2> " ;
 }
 else
 {
 htmlRes += "<h2 align = center>RainStopped</h2> " ;
 htmlRes += "<h2 align = center>Roof Opened</h2> " ;
 }
  htmlRes += HtmlHtmlClose;
  server.send(200, "text/html", htmlRes);
}
 
void setup() {
   
    delay(1000); 
    Serial.begin(9600);
    WiFi.softAP(ssid, password);
    server.on("/", response); 
    server.begin(); // Start the server
    //Serial.println("HTTP server beginned");
   
    pinMode(LED, OUTPUT);
    pinMode(D1, OUTPUT);
    pinMode(D2, OUTPUT);
    pinMode(D3, INPUT_PULLUP);
    digitalWrite(LED, statusLED);
    digitalWrite(D1, HIGH);
    digitalWrite(D2, HIGH);
    delay(2000);
    digitalWrite(D1, LOW);
    digitalWrite(D2, LOW);  
    //digitalWrite(D3, LOW);
    digitalWrite(LED, LOW);
     
}
 
void loop() 
{
  server.handleClient();
  digitalWrite(D1, LOW);
  digitalWrite(D2, LOW); 
  //sensorValue = analogRead(A0);
   if(digitalRead(D3)==LOW)
   {
      if(openflag == 0)
      {
      digitalWrite(D1, HIGH);
      digitalWrite(D2, LOW);
      delay(5000);
      digitalWrite(D1, LOW);
      digitalWrite(D2, LOW);
      openflag = 1;
      closeflag = 0;
      }
   }
   else
   {
      if(closeflag == 0)
      {
      digitalWrite(D1, LOW);
      digitalWrite(D2, HIGH);
      delay(5000);
      digitalWrite(D1, LOW);
      digitalWrite(D2, LOW); 
      closeflag = 1;
      openflag = 0;
      }
   }
 }
